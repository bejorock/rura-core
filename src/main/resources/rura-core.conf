akka.loglevel = WARNING

kamon {
	metric {
		filters {
			reactive-client {
		  		includes = [ "**" ]
		  		excludes = []
		  	}
		}
	}

	internal-config {
		akka {
	    	loglevel = WARNING
	  	}
	}

	statsd {
		hostname = "localhost"
		port = 8125
		report-system-metrics = true
		
		subscriptions {
			histogram       = [ "**" ]
		    min-max-counter = [ "**" ]
		    gauge           = [ "**" ]
		    counter         = [ "**" ]
		    trace           = [ "**" ]
		    trace-segment   = [ "**" ]
		    akka-actor      = [ "**" ]
		    akka-dispatcher = [ "**" ]
		    akka-router     = [ "**" ]
		    system-metric   = [ "**" ]
		    http-server     = [ "**" ]
		    reactive-client = [ "**" ]
		}
	}
}

rura {
	reactive-stream {
		client {
			input-slots = 100
		}

		output {
			max-result-cache = 2000
			max-error-cache = 1000

			//in seconds
			cache-timeout = 5 
		}
	}

	akka {
		mailbox {
			bounded-priority {
				mailbox-type = "xyz.rura.labs.io.reactive.BoundedReactiveMailbox"
				mailbox-capacity = 100
			  	mailbox-push-timeout-time = 5 minutes
			}
		}

		dispatcher {
			forkjoin {
				mainactor {
					type = Dispatcher
					executor = "fork-join-executor"
					fork-join-executor {
					    parallelism-min = 2
					    parallelism-factor = 10.0
					    parallelism-max = 100
					}
					throughput = 2
				}

				worker {
					type = Dispatcher
					executor = "fork-join-executor"
					fork-join-executor {
					    parallelism-min = 2
					    parallelism-factor = 100.0
					    parallelism-max = 1000
					}
					throughput = 1
				}
			}

			threadpool {
				simple {
					type = Dispatcher
					executor = "thread-pool-executor"
					thread-pool-executor {
					    core-pool-size-min = 2
					    core-pool-size-factor = 100.0
					    core-pool-size-max = 1000
					}
					throughput = 1
				}

				mainactor {
					type = Dispatcher
					executor = "thread-pool-executor"
					thread-pool-executor {
					    core-pool-size-min = 2
					    core-pool-size-factor = 10.0
					    core-pool-size-max = 100
					}
					throughput = 2
				}

				worker {
					type = Dispatcher
					executor = "thread-pool-executor"
					thread-pool-executor {
					    core-pool-size-min = 2
					    core-pool-size-factor = 100.0
					    core-pool-size-max = 1000
					}
					throughput = 1
				}
			}
		}
	}
}